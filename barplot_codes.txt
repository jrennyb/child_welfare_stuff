#side-by-side bars
data=structure(list(Community_Care=c(86, 168), Comprehensive_Care=c(177, 302), 
        Enhanced_Care=c(120, 211)), .Names=c("Community Care", "Comprehensive Care"
        , "Enhanced Care"), class="data.frame", row.names=c(NA, -2L))
        attach(data)
print(data)

colors=c("pink", "steelblue")
barplot(as.matrix(data), main = "CY 2014-2015 Congregate Care Demographics",
        ylab = "number of youth", cex.lab=1.5, cex.main=1.4, beside = TRUE, col = colors)

legend("topleft", c("CY14", "CY15"), cex = 1.3, bty = "n", fill = colors)

#-----------------


#Basic bar plot with vectored data
CC=c(86, 177, 120)
CC

barplot(CC, main="CY2014 Congregate Care Demographics", ylab="number of youth",
        names.arg=c("Community Care","Comprehensive Care","Enhanced Care"),
        border="red", density=c(90, 70, 50, 40, 30, 20, 10)) 




data(CY2014_15_GC_Demographics)
CY14_data=c(86, 177, 120) #community, comp, enhanced
CY15_data=c(168 ,302, 211) #comm, comp, enhanced

barplot(CY14_data, width = 1, space = 1,
                names.arg = c("Community Care", "Comprehensive Care", "Enhanced Care"),
        legend.text = "Breakdown of Congregate Care Demographics", beside = TRUE,
                horiz = FALSE, density = NULL, angle = 45,
                col = "pink", border = "red",
                main = "Congregate Care", sub = NULL, xlab = NULL, ylab = NULL,
                xlim = NULL, ylim = NULL, xpd = TRUE, log = "",
                axes = TRUE, axisnames = TRUE,
                cex.axis = par("cex.axis"), cex.names = par("cex.axis"),
                inside = TRUE, plot = TRUE, axis.lty = 0, offset = 0,
                add = FALSE, args.legend = NULL, ...
        
      
        require(graphics)
        coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
               xlab = "ToothGrowth data: length vs dose, given type of supplement")
        
        
        
df=data.frame(dose=c("D0.5", "D1", "D2"), len=c(4.2, 10, 29.5))
head(df)

library(ggplot2)
#barplot
p=ggplot(data = df, aes(x=dose, y=len))+geom_bar(stat = "identity")
p
#Horizontal bar plot
p=coord_flip()


# Change the width of bars
ggplot(data=df, aes(x=dose, y=len)) +
  geom_bar(stat="identity", width=0.5)
# Change colors
ggplot(data=df, aes(x=dose, y=len)) +
  geom_bar(stat="identity", color="blue", fill="white")
# Minimal theme + blue fill color
p<-ggplot(data=df, aes(x=dose, y=len)) +
  geom_bar(stat="identity", fill="steelblue")+
  theme_minimal()
p


# lables Outside bars
ggplot(data=df, aes(x=dose, y=len)) +
  geom_bar(stat="identity", fill="steelblue")+
  geom_text(aes(label=len), vjust=-0.3, size=3.5)+
  theme_minimal()
# labels Inside bars
ggplot(data=df, aes(x=dose, y=len)) +
  geom_bar(stat="identity", fill="steelblue")+
  geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
  theme_minimal()


#---------------------

head(mtcars)

# Don't map a variable to y
ggplot(mtcars, aes(x=factor(cyl)))+
  geom_bar(stat="count", width=0.7, fill="steelblue")+
  theme_minimal()

# Change barplot line colors by groups
p<-ggplot(df, aes(x=dose, y=len, color=dose)) +
  geom_bar(stat="identity", fill="white")
p

# Use custom color palettes
p+scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
# Use brewer color palettes
p+scale_color_brewer(palette="Dark2")
# Use grey scale
p + scale_color_grey() + theme_classic()


# Change barplot fill colors by groups
p<-ggplot(df, aes(x=dose, y=len, fill=dose)) +
  geom_bar(stat="identity")+theme_minimal()
p


# Use custom color palettes
p+scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
# use brewer color palettes
p+scale_fill_brewer(palette="Dark2")
# Use grey scale
p + scale_fill_grey()

# Change bar fill colors to blues
p <- p+scale_fill_brewer(palette="Blues")
p + theme(legend.position="top")
p + theme(legend.position="bottom")
# Remove legend
p + theme(legend.position="none")


df2 <- data.frame(supp=rep(c("VC", "OJ"), each=3),
                  dose=rep(c("D0.5", "D1", "D2"),2),
                  len=c(6.8, 15, 33, 4.2, 10, 29.5))
head(df2)

# Stacked barplot with multiple groups
ggplot(data=df2, aes(x=dose, y=len, fill=supp)) +
  geom_bar(stat="identity")
# Use position=position_dodge()
ggplot(data=df2, aes(x=dose, y=len, fill=supp)) +
  geom_bar(stat="identity", position=position_dodge())


# Change the colors manually
p <- ggplot(data=df2, aes(x=dose, y=len, fill=supp)) +
  geom_bar(stat="identity", color="black", position=position_dodge())+
  theme_minimal()
# Use custom colors
p + scale_fill_manual(values=c('#999999','#E69F00'))
# Use brewer color palettes
p + scale_fill_brewer(palette="Blues")


ggplot(data=df2, aes(x=dose, y=len, fill=supp)) +
  geom_bar(stat="identity", position=position_dodge())+
  geom_text(aes(label=len), vjust=1.6, color="white",
            position = position_dodge(0.9), size=3.5)+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()


library(plyr)
# Sort by dose and supp
df_sorted <- arrange(df2, dose, supp) 
head(df_sorted)


# Calculate the cumulative sum of len for each dose
df_cumsum <- ddply(df_sorted, "dose",
                   transform, label_ypos=cumsum(len))
head(df_cumsum)

# Create the barplot
ggplot(data=df_cumsum, aes(x=dose, y=len, fill=supp)) +
  geom_bar(stat="identity")+
  geom_text(aes(y=label_ypos, label=len), vjust=1.6, 
            color="white", size=3.5)+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()

#puts labels in the middle of the bars
df_cumsum <- ddply(df_sorted, "dose",
                   transform, 
                   label_ypos=cumsum(len) - 0.5*len)
# Create the barplot
ggplot(data=df_cumsum, aes(x=dose, y=len, fill=supp)) +
  geom_bar(stat="identity")+
  geom_text(aes(y=label_ypos, label=len), vjust=1.6, 
            color="white", size=3.5)+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()



#barplot with numeric x-axis
# Create some data
df2 <- data.frame(supp=rep(c("VC", "OJ"), each=3),
                  dose=rep(c("0.5", "1", "2"),2),
                  len=c(6.8, 15, 33, 4.2, 10, 29.5))
head(df2)


# x axis treated as continuous variable
df2$dose <- as.numeric(as.vector(df2$dose))
ggplot(data=df2, aes(x=dose, y=len, fill=supp)) +
  geom_bar(stat="identity", position=position_dodge())+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()
# Axis treated as discrete variable
df2$dose<-as.factor(df2$dose)
ggplot(data=df2, aes(x=dose, y=len, fill=supp)) +
  geom_bar(stat="identity", position=position_dodge())+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()

############
#makes cool matrix of scatter plots
pairs(mydata, pch=16, col="steelblue")


